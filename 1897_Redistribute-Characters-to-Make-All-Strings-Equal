//1897. Redistribute Characters to Make All Strings Equal
/*
You are given an array of strings words (0-indexed).
In one operation, pick two distinct indices i and j, where words[i] is a non-empty string, and move any character from words[i] to any position in words[j].
Return true if you can make every string in words equal using any number of operations, and false otherwise.
*/


/**
 * @param {string[]} words
 * @return {boolean}
 */
var makeEqual = function(words) {
    //  words = ["abc","aabc","bc"];
    let alphabet = new Array(26).fill(0);
    const numberOfWords = words.length;
    let numberOfCharacter = 0;
    for(let item of words){
        numberOfCharacter += item.length;
    }
    if(numberOfCharacter % numberOfWords !== 0){
        return false;
    }
     let alphaA = 'a';
       for( let word of words){
           for (let charac of word){
               let index = charac.charCodeAt(0) - alphaA.charCodeAt(0);
                alphabet[index]++;
                // alphabet[index] += 1;
           }
       }
       for(let count of alphabet){
           if ((count != 0) && (count % numberOfWords != 0)){
               return false;
           }
       }
    return true;
};
