//5. Longest Palindromic Substring
//Given a string s, return the longest palindromic substring in s.

/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function(s) {
    const len = s.length;
    let resultPalindrome = "";
    
    function longestPalindrome (left, right){
        while(left >=0 && right < len && s[left]===s[right]){
            left--;
            right++
        }
        return s.slice(left+1, right);
    }

    for(let i=0; i < len; i++){
        let oddPalindrom = longestPalindrome(i,i);
        let evenPalindrom = longestPalindrome(i,i+1);

    let currentlongPalindrom = evenPalindrom.length > oddPalindrom.length 
                        ? evenPalindrom 
                        : oddPalindrom;

        if(currentlongPalindrom.length > resultPalindrome.length){
            resultPalindrome = currentlongPalindrom;
        }

    }
    return resultPalindrome;
};
